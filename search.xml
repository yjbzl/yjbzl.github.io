<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>开篇</title>
    <url>/2023/09/06/%E5%BC%80%E7%AF%87/</url>
    <content><![CDATA[<p>&emsp;&emsp;最近在看一些技术书籍，感觉很多知识点光看而没有应用，很容易忘记。后面再次复习的时候，又从头看起，抓不住重点，而且书中复杂或者繁琐的知识点会再次花费比较多的精力去理解，去思考。平时遇到不懂的问题，在找到方案以后也没有系统记录。而在寻找答案过程中发现有很多人的博客写的很好，分析问题既全面又深入，让我再次有了写博客的念头。以前也有想过写博客，把工作中遇到的问题和平时的学习笔记记录下来，有个系统归纳的地方。但是总是怕自己写的不够好，不够深入，所以一直没有行动起来。现在想想，写博客主要是方便自己学习和记录，在写的过程中，不断加深理解，也会锻炼自己的书写能力。不积跬步无以至千里，不积小流二无以成江海。</p>
<p>&emsp;&emsp;这个博客可能主要包括以下几个方面的内容：</p>
<ul>
<li>看书学习笔记</li>
<li>工作中碰到的问题点、学到的工作技巧、或者一些有利于提升效率的方案等</li>
<li>热门话题的感触或者简介，比如GPT</li>
<li>……</li>
</ul>
<p>&emsp;&emsp;让我们开始，希望能一直坚持下去！</p>
]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
  </entry>
  <entry>
    <title>《Redis学习笔记》（一）Redis介绍</title>
    <url>/2023/09/06/%E3%80%8ARedis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%8B%EF%BC%88%E4%B8%80%EF%BC%89Redis%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<p><strong>约定</strong>：本系列以Redis 3.0.0版本分析，不同的Redis版本实现可能会不一样，但主要原理是变化不大的。</p>
<h2 id="Redis是什么"><a href="#Redis是什么" class="headerlink" title="Redis是什么"></a>Redis是什么</h2><p>&emsp;&emsp;REmote DIctionary Server(Redis) 是一个由Salvatore Sanfilippo写的key-value存储系统。</p>
<p>&emsp;&emsp;Redis是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。</p>
<p>&emsp;&emsp;它通常被称为数据结构服务器，因为值（value）可以是 字符串(String), 哈希(Map), 列表(list), 集合(sets) 和 有序集合(sorted sets)等类型。</p>
<span id="more"></span>

<h2 id="Redis能做什么"><a href="#Redis能做什么" class="headerlink" title="Redis能做什么"></a>Redis能做什么</h2><ul>
<li>缓存系统，缓存热点数据，提供键过期功能</li>
<li>分布式锁，利用Redis的setnx功能编写分布式锁，控制分布式服务对同一个资源的并发访问</li>
<li>简单的消息队列，提供发布、订阅、阻塞队列功能</li>
<li>计数器，利用Redis的incr功能实现计数器，高效记录资源的访问数</li>
<li>排行榜，利用Redis的sorted set实现按分数排行</li>
<li>……</li>
</ul>
<h2 id="Redis数据类型"><a href="#Redis数据类型" class="headerlink" title="Redis数据类型"></a>Redis数据类型</h2><p>&emsp;&emsp;Redis提供的功能，平时用的很多，比如缓存，分布式锁等等，但很多时候都仅仅是会使用，知其然而不知其所以然。这个系列不会对Redis的使用做过多的介绍，主要针对Redis的源码和底层逻辑做下简单介绍，分析Redis是为了提供这些功能，是怎么设计底层数据结构，怎么去实现这些功能。</p>
<p>&emsp;&emsp;Redis是以<strong>Key-Value</strong>的形式保存数据的，而Key都是以字符串的形式保存，主要的区分在于Value的数据结构。</p>
<p>&emsp;&emsp;Redis有五种基本数据类型：</p>
<ul>
<li>String字符串</li>
<li>List列表</li>
<li>Hash哈希</li>
<li>Set集合</li>
<li>Sorted Set有序集合</li>
</ul>
<p>&emsp;&emsp;Redis为了实现这五种基本数据类型，分别使用了哪些数据结构，底层的设计思想又是什么样的呢？在后面的文章中再分别说明。</p>
]]></content>
      <categories>
        <category>中间件</category>
        <category>《Redis学习笔记》</category>
      </categories>
      <tags>
        <tag>redis</tag>
        <tag>中间件</tag>
      </tags>
  </entry>
  <entry>
    <title>《Redis学习笔记》（三）数据结构SDS</title>
    <url>/2023/09/09/%E3%80%8ARedis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%8B%EF%BC%88%E4%B8%89%EF%BC%89%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84SDS/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>中间件</category>
        <category>《Redis学习笔记》</category>
      </categories>
      <tags>
        <tag>redis</tag>
        <tag>中间件</tag>
      </tags>
  </entry>
  <entry>
    <title>《Redis学习笔记》（二）RedisObject</title>
    <url>/2023/09/09/%E3%80%8ARedis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E3%80%8B%EF%BC%88%E4%BA%8C%EF%BC%89RedisObject/</url>
    <content><![CDATA[<p>&emsp;&emsp;Redis使用统一的对象RedisObject来表示五种基本数据类型，RedisObject的数据结构定义：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Object types */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_STRING 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_LIST 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_SET 2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_ZSET 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_HASH 4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Objects encoding. Some kind of objects like Strings and Hashes can be</span></span><br><span class="line"><span class="comment"> * internally represented in multiple ways. The &#x27;encoding&#x27; field of the object</span></span><br><span class="line"><span class="comment"> * is set to one of this fields for this object. */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_ENCODING_RAW 0     <span class="comment">/* Raw representation */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_ENCODING_INT 1     <span class="comment">/* Encoded as integer */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_ENCODING_HT 2      <span class="comment">/* Encoded as hash table */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_ENCODING_ZIPMAP 3  <span class="comment">/* Encoded as zipmap */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_ENCODING_LINKEDLIST 4 <span class="comment">/* Encoded as regular linked list */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_ENCODING_ZIPLIST 5 <span class="comment">/* Encoded as ziplist */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_ENCODING_INTSET 6  <span class="comment">/* Encoded as intset */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_ENCODING_SKIPLIST 7  <span class="comment">/* Encoded as skiplist */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_ENCODING_EMBSTR 8  <span class="comment">/* Embedded sds string encoding */</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* A redis object, that is a type able to hold a string / list / set */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* The actual Redis Object */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_LRU_BITS 24</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_LRU_CLOCK_MAX ((1<span class="string">&lt;&lt;REDIS_LRU_BITS)-1) /* Max value of obj-&gt;</span>lru */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> REDIS_LRU_CLOCK_RESOLUTION 1000 <span class="comment">/* LRU clock resolution in ms */</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">redisObject</span> &#123;</span></span><br><span class="line">    <span class="type">unsigned</span> type:<span class="number">4</span>;</span><br><span class="line">    <span class="type">unsigned</span> encoding:<span class="number">4</span>;</span><br><span class="line">    <span class="type">unsigned</span> lru:REDIS_LRU_BITS; <span class="comment">/* lru time (relative to server.lruclock) */</span></span><br><span class="line">    <span class="type">int</span> refcount;</span><br><span class="line">    <span class="type">void</span> *ptr;</span><br><span class="line">&#125; robj;</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<p>&emsp;&emsp;RedisObject对象字段说明：</p>
<ul>
<li>type 对象的数据类型，占4bit，取值有五种：OBJ_STRING，OBJ_LIST，OBJ_SET，OBJ_ZSET，OBJ_HASH。分别代表五种数据类型字符串，列表，集合，有序集合，哈希。</li>
<li>encoding 编码，代表对象的内部实现方式，占4bit。</li>
<li>lru LRU算法清除内存中的对象，占24bit</li>
<li>refcount 引用计数，占4byte</li>
<li>ptr 数据指针，指向具体的数据对象。比如string类型，ptr可能指向一个SDS结构的数据</li>
</ul>
<p>&emsp;&emsp;RedisObject不包含ptr指向的具体数据对象，一共占用的内存：</p>
<blockquote>
<p>4bit+4bit+24bit+4byte+8byte&#x3D;16byte</p>
</blockquote>
<p>&emsp;&emsp;Redis每种编码方式对应一种具体的数据结构</p>
<table>
<thead>
<tr>
<th>编码常量</th>
<th>具体的数据结构</th>
</tr>
</thead>
<tbody><tr>
<td>REDIS_ENCODING_RAW</td>
<td>简单动态字符串</td>
</tr>
<tr>
<td>REDIS_ENCODING_INT</td>
<td>long类型的整数</td>
</tr>
<tr>
<td>REDIS_ENCODING_HT</td>
<td>字典</td>
</tr>
<tr>
<td>REDIS_ENCODING_ZIPMAP</td>
<td>历史遗留常量，已不再使用</td>
</tr>
<tr>
<td>REDIS_ENCODING_LINKEDLIST</td>
<td>双向链表</td>
</tr>
<tr>
<td>REDIS_ENCODING_ZIPLIST</td>
<td>压缩列表</td>
</tr>
<tr>
<td>REDIS_ENCODING_INTSET</td>
<td>整数集合</td>
</tr>
<tr>
<td>REDIS_ENCODING_SKIPLIST</td>
<td>跳跃表</td>
</tr>
<tr>
<td>REDIS_ENCODING_EMBSTR</td>
<td>embstr编码的简单动态字符串</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>中间件</category>
        <category>《Redis学习笔记》</category>
      </categories>
      <tags>
        <tag>redis</tag>
        <tag>中间件</tag>
      </tags>
  </entry>
</search>
